(ns clojure-tutorial.coll.stack)

;栈是支持经典的后进先出(LIFO)语义的集合
;Clojure中并没有一个独立的“栈”集合，但是它公国三个操作来支持这个语义
;1.用conj把一个值添加到栈中去
;2.用pop来获取栈顶的值，并移除这个值
;3.用peek来获取栈顶的值，但是不去除这个值

;列表和vector都可以当做栈来使用，在两种集合中，栈顶都是conj可以高效添加元素的另外一端。

;把列表当做栈
(conj '() 1)                                                ;;(1)
(conj '(2 1) 3)                                             ;;(3 2 1)
(peek '(3 2 1))                                             ;;3
(pop '(3 2 1))                                              ;;(2 1)
(pop '(1))                                                  ;;()

;把vector当做栈
(conj [] 1)                                                 ;;[1]
(conj [1 2] 3)                                              ;;[1 2 3]
(peek [1 2 3])                                              ;;3
(pop [1 2 3])                                               ;;[1 2]
(pop [1])                                                   ;;[]