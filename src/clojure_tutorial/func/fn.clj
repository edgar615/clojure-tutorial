(ns clojure-tutorial.func.fn)

;函数本身就是值，它们可以像其他数据一样，作为参数传给其他函数，同时也可以把函数作为返回值


;实现一个函数，它的作用是调用其他函数两次。
(defn call-twice [f x]
  (f x)
  (f x))
(call-twice println "Hello!")

;Clojure的所有函数都是头等公民。它们独立存在，不依附于任何对象或者命名空间，可以作为参数传递给其他函数，也可以被其他函数作为返回值返回。
;它们是数据，就如同数据结构，数字以及字符串一样。

;Clojure函数本身是值，它们可以被高阶函数使用。
;所谓高阶函数，是指接受函数作为参数，或者把函数作为返回值的函数

;map
;map接受一个函数、一个或多个集合作为参数，返回一个序列作为结果，这个返回的序列是把这个函数应用到所有集合对应元素所得结果的一个序列。

;reduce
;归约：向一个集合应用一个函数二产生单个值的过程

;apply
;函数应用:给定一个函数，以及要传给这个函数的参数序列，然后来调用这个函数的过程

;partial
;偏函数：把函数的一部分参数传给一个函数，这样创建一个新的函数，这个函数需要的参数就是你没有传给那个函数的那些剩余函数
;预先为某个函数加上个别参数，等到函数正式被调用的时候把剩下的参数补上

